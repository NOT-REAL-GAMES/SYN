"#ifndef _PBR_STRUCTURES_FXH_\n"
"#define _PBR_STRUCTURES_FXH_\n"
"\n"
"#ifdef __cplusplus\n"
"\n"
"#   ifndef CHECK_STRUCT_ALIGNMENT\n"
"        // Note that defining empty macros causes GL shader compilation error on Mac, because\n"
"        // it does not allow standalone semicolons outside of main.\n"
"        // On the other hand, adding semicolon at the end of the macro definition causes gcc error.\n"
"#       define CHECK_STRUCT_ALIGNMENT(s) static_assert( sizeof(s) % 16 == 0, \"sizeof(\" #s \") is not multiple of 16\" )\n"
"#   endif\n"
"\n"
"#endif\n"
"\n"
"#ifndef PBR_WORKFLOW_METALLIC_ROUGHNESS\n"
"#   define PBR_WORKFLOW_METALLIC_ROUGHNESS 0\n"
"#endif\n"
"\n"
"#ifndef PBR_WORKFLOW_SPECULAR_GLOSINESS\n"
"#   define PBR_WORKFLOW_SPECULAR_GLOSINESS 1\n"
"#endif\n"
"\n"
"\n"
"#ifndef PBR_ALPHA_MODE_OPAQUE\n"
"#   define PBR_ALPHA_MODE_OPAQUE 0\n"
"#endif\n"
"\n"
"#ifndef PBR_ALPHA_MODE_MASK\n"
"#   define PBR_ALPHA_MODE_MASK 1\n"
"#endif\n"
"\n"
"#ifndef PBR_ALPHA_MODE_BLEND\n"
"#   define PBR_ALPHA_MODE_BLEND 2\n"
"#endif\n"
"\n"
"#ifndef ENABLE_SHEEN\n"
"#   define ENABLE_SHEEN 0\n"
"#endif\n"
"\n"
"#ifndef ENABLE_ANISOTROPY\n"
"#   define ENABLE_ANISOTROPY 0\n"
"#endif\n"
"\n"
"#ifndef ENABLE_IRIDESCENCE\n"
"#   define ENABLE_IRIDESCENCE 0\n"
"#endif\n"
"\n"
"#ifndef ENABLE_TRANSMISSION\n"
"#   define ENABLE_TRANSMISSION 0\n"
"#endif\n"
"\n"
"#ifndef ENABLE_VOLUME\n"
"#   define ENABLE_VOLUME 0\n"
"#endif\n"
"\n"
"#ifndef PBR_NUM_TEXTURE_ATTRIBUTES\n"
"#   define PBR_NUM_TEXTURE_ATTRIBUTES 0\n"
"#endif\n"
"\n"
"\n"
"struct GLTFNodeShaderTransforms\n"
"{\n"
"	float4x4 NodeMatrix;\n"
"\n"
"	int   JointCount;\n"
"    float Dummy0;\n"
"    float Dummy1;\n"
"    float Dummy2;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(GLTFNodeShaderTransforms);\n"
"#endif\n"
"\n"
"\n"
"struct PBRRendererShaderParameters\n"
"{\n"
"	float AverageLogLum;\n"
"	float MiddleGray;\n"
"    float WhitePoint;\n"
"	float PrefilteredCubeLastMip; // Prefiltered cube map last mip level\n"
"\n"
"	float IBLScale;\n"
"    float OcclusionStrength;\n"
"    float EmissionScale;\n"
"    float PointSize; // OpenGL and Vulkan\n"
"\n"
"    float MipBias;\n"
"    int   LightCount;\n"
"    float Padding0;\n"
"    float Padding1;\n"
"\n"
"    float4 UnshadedColor;\n"
"    float4 HighlightColor;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(PBRRendererShaderParameters);\n"
"#endif\n"
"\n"
"struct PBRMaterialBasicAttribs\n"
"{\n"
"    float4 BaseColorFactor;\n"
"    float4 EmissiveFactor;\n"
"    float4 SpecularFactor;\n"
"\n"
"    int   Workflow;\n"
"    int   AlphaMode;\n"
"    float AlphaMaskCutoff;\n"
"    float MetallicFactor;\n"
"\n"
"    float RoughnessFactor;\n"
"    float OcclusionFactor;\n"
"    float ClearcoatFactor;\n"
"    float ClearcoatRoughnessFactor;\n"
"\n"
"    // Any user-specific data\n"
"    float4 CustomData;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(PBRMaterialBasicAttribs);\n"
"#endif\n"
"\n"
"struct PBRMaterialSheenAttribs\n"
"{\n"
"    float ColorFactorR;\n"
"    float ColorFactorG;\n"
"    float ColorFactorB;\n"
"    float RoughnessFactor;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(PBRMaterialSheenAttribs);\n"
"#endif\n"
"\n"
"struct PBRMaterialAnisotropyAttribs\n"
"{\n"
"    float Strength;\n"
"    float Rotation;\n"
"    float Padding0;\n"
"    float Padding1;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(PBRMaterialAnisotropyAttribs);\n"
"#endif\n"
"\n"
"struct PBRMaterialIridescenceAttribs\n"
"{\n"
"    float Factor;\n"
"    float IOR;\n"
"    float ThicknessMinimum;\n"
"    float ThicknessMaximum;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(PBRMaterialIridescenceAttribs);\n"
"#endif\n"
"\n"
"struct PBRMaterialTransmissionAttribs\n"
"{\n"
"    float Factor;\n"
"    float Padding0;\n"
"    float Padding1;\n"
"    float Padding2;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(PBRMaterialTransmissionAttribs);\n"
"#endif\n"
"\n"
"struct PBRMaterialVolumeAttribs\n"
"{\n"
"    float AttenuationColorR;\n"
"    float AttenuationColorG;\n"
"    float AttenuationColorB;\n"
"    float ThicknessFactor;\n"
"\n"
"    float AttenuationDistance;\n"
"    float Padding0;\n"
"    float Padding1;\n"
"    float Padding2;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(PBRMaterialVolumeAttribs);\n"
"#endif\n"
"\n"
"struct PBRMaterialTextureAttribs\n"
"{\n"
"    float UVSelector;\n"
"    float TextureSlice;\n"
"    float UBias;\n"
"    float VBias;\n"
"\n"
"    float4 UVScaleAndRotation;\n"
"    float4 AtlasUVScaleAndBias;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(PBRMaterialTextureAttribs);\n"
"#endif\n"
"\n"
"struct PBRMaterialShaderInfo\n"
"{\n"
"    PBRMaterialBasicAttribs Basic;\n"
"\n"
"#if ENABLE_SHEEN\n"
"    PBRMaterialSheenAttribs Sheen;\n"
"#endif\n"
"\n"
"#if ENABLE_ANISOTROPY\n"
"    PBRMaterialAnisotropyAttribs Anisotropy;\n"
"#endif\n"
"\n"
"#if ENABLE_IRIDESCENCE\n"
"    PBRMaterialIridescenceAttribs Iridescence;\n"
"#endif\n"
"\n"
"#if ENABLE_TRANSMISSION\n"
"    PBRMaterialTransmissionAttribs Transmission;\n"
"#endif\n"
"\n"
"#if ENABLE_VOLUME\n"
"    PBRMaterialVolumeAttribs Volume;\n"
"#endif\n"
"\n"
"#if PBR_NUM_TEXTURE_ATTRIBUTES > 0\n"
"    PBRMaterialTextureAttribs Textures[PBR_NUM_TEXTURE_ATTRIBUTES];\n"
"#endif\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(PBRMaterialShaderInfo);\n"
"#endif\n"
"\n"
"struct PBRLightAttribs\n"
"{\n"
"    int   Type; // 1 - directional, 2 - point, 3 - spot\n"
"    float PosX; // Point or spot light\n"
"    float PosY; // position; unused for\n"
"    float PosZ; // directional light.\n"
"\n"
"    float DirectionX; // Directional and spot lights.\n"
"    float DirectionY;\n"
"    float DirectionZ;\n"
"    int   ShadowMapIndex; // -1 if light does not cast shadows\n"
"\n"
"    float IntensityR;\n"
"    float IntensityG;\n"
"    float IntensityB;\n"
"    float Range4;         // Point and spot light range to the power of 4\n"
"\n"
"    float SpotAngleScale; // 1.0 / (cos(InnerConeAngle) - cos(OuterConeAngle))\n"
"    float SpotAngleOffset;// -cos(OuterConeAngle) * SpotAngleScale;\n"
"    float Padding0;\n"
"    float Padding1;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"	CHECK_STRUCT_ALIGNMENT(PBRLightAttribs);\n"
"#endif\n"
"\n"
"\n"
"struct PBRShadowMapInfo\n"
"{\n"
"    float4x4 WorldToLightProjSpace;\n"
"\n"
"    float2 UVScale;\n"
"    float2 UVBias;\n"
"\n"
"    float    ShadowMapSlice;\n"
"    float    Padding0;\n"
"    float    Padding1;\n"
"    float    Padding2;\n"
"};\n"
"#ifdef CHECK_STRUCT_ALIGNMENT\n"
"    CHECK_STRUCT_ALIGNMENT(PBRShadowMapInfo);\n"
"#endif\n"
"\n"
"#endif // _PBR_STRUCTURES_FXH_\n"
