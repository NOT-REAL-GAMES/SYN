"#include \"FullScreenTriangleVSOutput.fxh\"\n"
"#include \"DepthOfFieldStructures.fxh\"\n"
"#include \"PostFX_Common.fxh\"\n"
"\n"
"cbuffer cbDepthOfFieldAttribs\n"
"{\n"
"    DepthOfFieldAttribs g_DOFAttribs;\n"
"}\n"
"\n"
"Texture2D<float3> g_TextureColor;\n"
"Texture2D<float>  g_TextureCoC;\n"
"\n"
"float ComputeWeigh(float3 Color)\n"
"{\n"
"	return 1.0 / (1.0 + max(max(Color.r, Color.g), Color.b));\n"
"}\n"
"\n"
"float4 ComputePrefilteredTexturePS(in FullScreenTriangleVSOutput VSOut) : SV_Target0\n"
"{\n"
"    int2 Position = 2 * int2(VSOut.f4PixelPos.xy);\n"
"\n"
"    float CoCMin = +FLT_MAX;\n"
"    float CoCMax = -FLT_MAX;\n"
"\n"
"	float4 ColorSum = float4(0.0, 0.0, 0.0, 0.0);\n"
"\n"
"    for (int SampleIdx = 0; SampleIdx < 4; ++SampleIdx)\n"
"    {\n"
"        int2 Location = Position + int2(SampleIdx & 0x01, SampleIdx >> 1);\n"
"\n"
"        float3 Color = g_TextureColor.Load(int3(Location, 0));\n"
"        float CoC    = g_TextureCoC.Load(int3(Location, 0));\n"
"        float Weight = ComputeWeigh(Color);\n"
"\n"
"        CoCMin = min(CoCMin, CoC);\n"
"        CoCMax = max(CoCMax, CoC);\n"
"\n"
"        ColorSum.xyz += Weight * Color;\n"
"        ColorSum.w   += Weight;\n"
"    }\n"
"\n"
"    return float4(ColorSum.xyz / max(ColorSum.w, 1.e-5), CoCMax >= -CoCMin ? CoCMax : CoCMin);\n"
"}\n"
