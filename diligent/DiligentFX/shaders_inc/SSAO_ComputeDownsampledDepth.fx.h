"#include \"SSAO_Common.fxh\"\n"
"#include \"PostFX_Common.fxh\"\n"
"#include \"BasicStructures.fxh\"\n"
"#include \"FullScreenTriangleVSOutput.fxh\"\n"
"\n"
"#pragma warning(disable : 3078)\n"
"\n"
"Texture2D g_TextureDepth;\n"
"\n"
"int ComputeCheckerboardPattern(int2 Position)\n"
"{\n"
"    return (Position.x + Position.y & 1) & 1;\n"
"}\n"
"\n"
"float ComputeDepthCheckerboard(Texture2D SampledTexture, int2 Position)\n"
"{\n"
"    float Depth0 = SampledTexture.Load(int3(2 * Position + int2(0, 0), 0)).x;\n"
"    float Depth1 = SampledTexture.Load(int3(2 * Position + int2(0, 1), 0)).x;\n"
"    float Depth2 = SampledTexture.Load(int3(2 * Position + int2(1, 0), 0)).x;\n"
"    float Depth3 = SampledTexture.Load(int3(2 * Position + int2(1, 1), 0)).x;\n"
"    float MinDepth = min(min(Depth0, Depth1), min(Depth2, Depth3));\n"
"    float MaxDepth = max(max(Depth0, Depth1), max(Depth2, Depth3));\n"
"    return lerp(MinDepth, MaxDepth, float(ComputeCheckerboardPattern(Position)));\n"
"}\n"
"\n"
"float ComputeDownsampledDepthPS(in FullScreenTriangleVSOutput VSOut) : SV_Target0\n"
"{\n"
"    float2 Position = VSOut.f4PixelPos.xy;\n"
"    return ComputeDepthCheckerboard(g_TextureDepth, int2(Position));\n"
"}\n"
