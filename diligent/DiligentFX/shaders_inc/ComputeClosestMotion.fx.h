"#include \"BasicStructures.fxh\"\n"
"#include \"FullScreenTriangleVSOutput.fxh\"\n"
"#include \"PostFX_Common.fxh\"\n"
"\n"
"#if POSTFX_OPTION_INVERTED_DEPTH\n"
"    #define DepthFarPlane  0.0\n"
"#else\n"
"    #define DepthFarPlane  1.0\n"
"#endif // POSTFX_OPTION_INVERTED_DEPTH\n"
"\n"
"Texture2D<float>  g_TextureDepth;\n"
"Texture2D<float2> g_TextureMotion;\n"
"\n"
"float SampleDepth(int2 PixelCoord)\n"
"{\n"
"    return g_TextureDepth.Load(int3(PixelCoord, 0));\n"
"}\n"
"\n"
"float2 SampleMotion(int2 PixelCoord)\n"
"{\n"
"    return g_TextureMotion.Load(int3(PixelCoord, 0));\n"
"}\n"
"\n"
"float2 SampleClosestMotion(int2 PixelCoord)\n"
"{\n"
"    float ClosestDepth = DepthFarPlane;\n"
"    int2 ClosestOffset = int2(0, 0);\n"
"\n"
"    const int SearchRadius = 1;\n"
"    for (int x = -SearchRadius; x <= SearchRadius; x++)\n"
"    {\n"
"        for (int y = -SearchRadius; y <= SearchRadius; y++)\n"
"        {\n"
"            int2 Coord = int2(PixelCoord) + int2(x, y);\n"
"            float NeighborDepth = SampleDepth(Coord);\n"
"#if POSTFX_OPTION_INVERTED_DEPTH\n"
"            if (NeighborDepth > ClosestDepth)\n"
"#else\n"
"            if (NeighborDepth < ClosestDepth)\n"
"#endif\n"
"            {\n"
"                ClosestOffset = int2(x, y);\n"
"                ClosestDepth = NeighborDepth;\n"
"            }\n"
"        }\n"
"    }\n"
"\n"
"    return SampleMotion(PixelCoord + ClosestOffset);\n"
"}\n"
"\n"
"float2 ComputeClosestMotionPS(in FullScreenTriangleVSOutput VSOut) : SV_Target0\n"
"{\n"
"    float4 Position = VSOut.f4PixelPos;\n"
"    return SampleClosestMotion(int2(Position.xy));\n"
"}\n"
